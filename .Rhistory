read.csv('data/FIRST USE OF MARIJUANA')
read.csv('/Data/FIRST USE OF MARIJUANA')
read.csv('Data/FIRST USE OF MARIJUANA')
setwd("~/Documents/INFO 201/info-201-final-project")
read.csv('/Data/FIRST USE OF MARIJUANA')
read.csv('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA')
load("~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx")
setwd("~/")
read.csv('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA')
setwd("~/Documents/INFO 201/info-201-final-project")
read.csv('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.csv')
install.packages('xlsx')
library(xlsx)
install.packages('xlsx')
library(xlsx)
require(xlsx)
require(xlsx)
install.packages('readxl')
library(readxl)
read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA')
read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx')
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx')
rm(list=ls())
library(readxl)
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx')
View(first.use)
past.month <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/MARIJUANA USE IN PAST MONTH.xlsx')
past.year <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/MARIJUANA USE IN PAST YEAR.xlsx')
risk.perceptions <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/SMOKING MARIJUANA RISKS PERCEPTIONS.xlsx')
View(risk.perceptions)
View(past.year)
View(past.month)
View(first.use)
library(jsonlite)
library(dplyr)
full_join(first.use, past.month, by = Order)
full_join(first.use, past.month, by = 'Order')
joined <- full_join(first.use, past.month, by = 'Order')
View(joined)
joined <- full_join(first.use, past.month, by = 'Order', suffix = c('.first', '.month'))
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx') %>%
select(Order, State, Small Area Estimate, 95% CI (Lower), 95^ CI (Upper))
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx') %>%
select(Order, State, Small Area Estimate, 95% CI (Lower), 95% CI (Upper))
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx') %>%
select('Order', 'State, Small Area Estimate', '95% CI (Lower)', '95% CI (Upper)')
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx') %>%
select('1', '4', '5', '6')
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx') %>%
select(1, 4:6)
past.month <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/MARIJUANA USE IN PAST MONTH.xlsx') %>%
select(1, 4:6)
past.year <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/MARIJUANA USE IN PAST YEAR.xlsx') %>%
select(1, 4:6)
risk.perceptions <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/SMOKING MARIJUANA RISKS PERCEPTIONS.xlsx') %>%
select(1, 4:6)
joined <- full_join(first.use, past.month, by = 'Order', suffix = c('.first', '.month'))
joined <- full_join(first.use, past.month, by = 'Order', suffix = c('.first', '.month')) %>%
joined.two <- full_join(past.year, risk.perceptions, by = 'Order', suffix = c('.year', 'risk'))
joined <- full_join(first.use, past.month, by = 'Order', suffix = c('.first', '.month'))
joined.two <- full_join(past.year, risk.perceptions, by = 'Order', suffix = c('.year', 'risk'))
View(joined.two)
joined.two <- full_join(past.year, risk.perceptions, by = 'Order', suffix = c('.year', '.risk'))
joined <- full_join(past.month, past.year, by = 'Order', suffix = c('.month', '.year'))
joined.two <- full_join(first.use, risk.perceptions, by = 'Order', suffix = c('.first', '.risk'))
rm(list=ls())
# Bar Graph of Usage Frequencies
library(readxl)
library(dplyr)
# Combine Datasets
first.use <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/FIRST USE OF MARIJUANA.xlsx') %>%
select(1, 4:6)
past.month <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/MARIJUANA USE IN PAST MONTH.xlsx') %>%
select(1, 4:6)
past.year <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/MARIJUANA USE IN PAST YEAR.xlsx') %>%
select(1, 4:6)
risk.perceptions <- read_excel('~/Documents/INFO 201/info-201-final-project/Data/SMOKING MARIJUANA RISKS PERCEPTIONS.xlsx') %>%
select(1, 4:6)
month.year <- full_join(past.month, past.year, by = 'Order', suffix = c('.month', '.year'))
first.risk <- full_join(first.use, risk.perceptions, by = 'Order', suffix = c('.first', '.risk'))
View(risk.perceptions)
View(first.risk)
View(month.year)
=======
setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project/scripts")
setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project/scripts")
marijuana.laws <- read.csv('./data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
marijuana.laws <- read.csv('./Data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
marijuana.laws <- read.csv('../Data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
View(marijuana.laws)
View(marijuana.laws)
install.packages('timeline', repos='http://cran.r-project.org')
library(timeline)
library(ggplot2)
library(timeline)
demo(ww2)
library(dplyr)
library(plotly)
library(ggplot2)
View(ww2.events)
var.equation <- paste0('~', yvar)
plot_ly(data=data, x = ~Year,
y = eval(parse(text = var.equation)),
type = 'scatter', mode = 'lines')
BuildTimeline <- function(data, yvar){
var.equation <- paste0('~', yvar)
plot_ly(data=data, x = ~Year,
y = eval(parse(text = var.equation)),
type = 'scatter', mode = 'lines')
return(timeline)
}
plot <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
View(plot)
p <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
View(p)
p <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
View(p)
View(p)
p <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
p <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project/scripts")
marijuana.laws <- read.csv('../Data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
BuildTimeline <- function(data, yvar){
var.equation <- paste0('~', yvar)
timeline <- plot_ly(data=data, x = ~Year,
y = eval(parse(text = var.equation)),
type = 'scatter', mode = 'lines')
return(timeline)
}
p <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
View(p)
p
p <- BuildTimeline(marijuana.laws, yvar = 'Percent_Yes')
p
BuildTimeline <- function(data, yvar){
var.equation <- paste0('~', yvar)
timeline <- plot_ly(data=data, x = ~Year,
y = eval(parse(text = var.equation)),
type = 'scatter', mode = 'lines+markers')
return(timeline)
}
p <- BuildTimeline(marijuana.laws, yvar = 'Percent_Yes')
p
library(plotly)
library(ggplot2)
setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project/scripts")
marijuana.laws <- read.csv('../Data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
BuildTimeline <- function(data, yvar){
var.equation <- paste0('~', yvar)
timeline <- plot_ly(data=data, x = ~Year,
y = eval(parse(text = var.equation)),
type = 'scatter', mode = 'lines+markers')
return(timeline)
}
p <- BuildTimeline(marijuana.laws, yvar = 'Yes_Legal')
p
marijuana.laws <- read.csv('./Data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project")
marijuana.laws <- read.csv('./Data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
source('./scripts/Timeline.R')
source('./scripts/Timeline.R')
source('/scripts/Timeline.R')
source('./scripts/Timeline.R')
source('../scripts/Timeline.R')
shiny::runApp('C:/Users/Julia/Desktop/Info201/info-201-final-project')
>>>>>>> e8470680c5a271ebdbfd5f5304ff226d0a5a6e9d
# server.r
library(shiny)
#setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project")
marijuana.laws <- read.csv('./data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
source('./Scripts/Timeline.R')
source('./Scripts/MapGraph.R')
source('./Scripts/Bar Graph.R')
##Dominicks data manipulation.
data.set.month <- read.csv("./data/Marijuana_Use_Past_Month.csv")
data.set.year <-  read.csv("./data/Marijuana_Use_Past_Year.csv")
states.data <- read.csv("./data/States.csv")
#is.data.frame(data.set.month)
#is.data.frame(data.set.year)
#is.data.frame(states.data)
#View(states.data)
# Create new column with no percent sign so we can calculate values
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
updated.year.data <- mutate(data.set.year, percents = extract_numeric(Small..Area.Estimate))
# Organize percentages smoked by State
avg.month.data <- ddply(updated.month.data, .(State), summarize, percents = mean(percents))
#View(avg.month.data)
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
#View(new.avg.month.data)
avg.year.data <- ddply(updated.year.data, .(State), summarize, percents = mean(percents))
new.avg.year.data <- merge(avg.year.data, states.data, by = "State")
#View(new.avg.year.data)
#############
shinyServer(function(input, output) {
# Map  with Widget
output$AvgMonthYear <- renderPlotly({
if(input$var == "Month"){
avg.data <- new.avg.month.data
} else{
avg.data <- new.avg.year.data
}
return(BuildMap(avg.data))
})
# Timeline with Widgit
output$timeline <- renderPlotly({
return(BuildTimeline(marijuana.laws, input$yvar))
})
# Bar Graph without Widget
output$plot <- renderPlotly({
return(BuildBar(data.set.month))
})
})
# ui.r
library(shiny)
library(plotly)
shinyUI(navbarPage('Marijuana Facts',
tabPanel("Introduction",
# Main panel: display data
mainPanel(
#output datavis
img(src="./leaf18n-1-web.jpg", height = 400, width = 300)
)
),
tabPanel("Timeline for Marijuana Legalization",
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
#Widget
selectInput('yvar', label = 'Variable to Graph', choices = list("% For Legalization" = 'Percent_Yes', '% Against Legalization' = 'No_Illegal', '% No Opinion' = 'No_Opinion'))
),
# Main panel: display data
mainPanel(
#output datavis
plotlyOutput('timeline')
)
)
),
tabPanel('Map',
# Create a sidebar layout for this tab (page)
sidebarLayout(
sidebarPanel(
p('States with Most Usage'),
selectInput(inputId = "var",
label = "Month vs. Year:",
choices = c("Month", "Year"),
selected = "Month")
),
# Show a plot of the generated distribution
mainPanel(
plotlyOutput("AvgMonthYear")
)
)
),
tabPanel('Bar Graph',
# Create a sidebar layout for this tab (page)
sidebarLayout(
# Create a sidebarPanel for your controls
sidebarPanel(
# Text
),
mainPanel(
#output datavis
plotlyOutput('plot')
)
)
)
)
)
runApp()
install.packages('readxl')
# server.r
library(shiny)
#setwd("C:/Users/Julia/Desktop/Info201/info-201-final-project")
marijuana.laws <- read.csv('./data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
source('./Scripts/Timeline.R')
source('./Scripts/MapGraph.R')
source('./Scripts/Bar Graph.R')
##Dominicks data manipulation.
data.set.month <- read.csv("./data/Marijuana_Use_Past_Month.csv")
data.set.year <-  read.csv("./data/Marijuana_Use_Past_Year.csv")
states.data <- read.csv("./data/States.csv")
#is.data.frame(data.set.month)
#is.data.frame(data.set.year)
#is.data.frame(states.data)
#View(states.data)
# Create new column with no percent sign so we can calculate values
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
updated.year.data <- mutate(data.set.year, percents = extract_numeric(Small..Area.Estimate))
# Organize percentages smoked by State
avg.month.data <- ddply(updated.month.data, .(State), summarize, percents = mean(percents))
#View(avg.month.data)
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
#View(new.avg.month.data)
avg.year.data <- ddply(updated.year.data, .(State), summarize, percents = mean(percents))
new.avg.year.data <- merge(avg.year.data, states.data, by = "State")
#View(new.avg.year.data)
#############
shinyServer(function(input, output) {
# Map  with Widget
output$AvgMonthYear <- renderPlotly({
if(input$var == "Month"){
avg.data <- new.avg.month.data
} else{
avg.data <- new.avg.year.data
}
return(BuildMap(avg.data))
})
# Timeline with Widgit
output$timeline <- renderPlotly({
return(BuildTimeline(marijuana.laws, input$yvar))
})
# Bar Graph without Widget
output$plot <- renderPlotly({
return(BuildBar(data.set.month))
})
})
# ui.r
library(shiny)
library(plotly)
shinyUI(navbarPage('Marijuana Facts',
tabPanel("Introduction",
# Main panel: display data
mainPanel(
#output datavis
img(src="./leaf18n-1-web.jpg", height = 400, width = 300)
)
),
tabPanel("Timeline for Marijuana Legalization",
# Create sidebar layout
sidebarLayout(
# Side panel for controls
sidebarPanel(
#Widget
selectInput('yvar', label = 'Variable to Graph', choices = list("% For Legalization" = 'Percent_Yes', '% Against Legalization' = 'No_Illegal', '% No Opinion' = 'No_Opinion'))
),
# Main panel: display data
mainPanel(
#output datavis
plotlyOutput('timeline')
)
)
),
tabPanel('Map',
# Create a sidebar layout for this tab (page)
sidebarLayout(
sidebarPanel(
p('States with Most Usage'),
selectInput(inputId = "var",
label = "Month vs. Year:",
choices = c("Month", "Year"),
selected = "Month")
),
# Show a plot of the generated distribution
mainPanel(
plotlyOutput("AvgMonthYear")
)
)
),
tabPanel('Bar Graph',
# Create a sidebar layout for this tab (page)
sidebarLayout(
# Create a sidebarPanel for your controls
sidebarPanel(
# Text
),
mainPanel(
#output datavis
plotlyOutput('plot')
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
state.laws <- read.csv("./Data/state_marijuana_laws_10_2016.csv")
View(state.laws)
legalization.status <- read.csv("./Data/state_marijuana_laws_10_2016.csv")
View(legalization.status)
legalized.medical <- legalization.status %>%
filter(Medical.marijuana.legalized == 'Yes')
View(legalized.medical)
legalized.medical <- legalization.status %>%
filter(Medical.marijuana.legalized == 'Yes') %>%
summarise(n = n())
#View(legalization.status)
legalized.medical <- legalization.status %>%
filter(Medical.marijuana.legalized == 'Yes') %>%
summarise(n() = n)
library(dplyr)
legalized.medical <- legalization.status %>%
filter(Medical.marijuana.legalized == 'Yes') %>%
summarise(n = n())
legalized.medical <- legalization.status %>%
filter(Medical.marijuana.legalized == 'Yes')
legalized.medical <- nrow(legalized.medical)
View(legalized.medical)
legalized.medical <- legalization.status %>% filter(Medical.marijuana.legalized == 'Yes') %>% summarise(sum = sum(Medical.marijuana.legalized))
View(legalized.rec)
legalized.rec <- legalization.status %>% filter(Marijuana.legalized.for.recreational.use == 'Yes')
legalized.rec <- nrow(legalized.rec)
View(legalized.rec)
no.laws <- legalization.status %>% filter(No.laws.legalizing.marijuana == 'Yes')
no.laws <- nrow(no.laws)
View(no.laws)
runApp()
runApp()
runApp()
runApp()
runApp()
View(legalized.rec)
legalized.medical <- legalization.status %>% filter(Medical.marijuana.legalized == 'Yes')
num.legalized.medical <- nrow(legalized.medical)
legalized.rec <- legalization.status %>% filter(Marijuana.legalized.for.recreational.use == 'Yes') %>% mutate(num.states == nrow())
num.legalized.rec <- nrow(legalized.rec)
no.laws <- legalization.status %>% filter(No.laws.legalizing.marijuana == 'Yes')
num.no.laws <- nrow(no.laws)
View(legalized.rec)
legalized.medical <- legalization.status %>% filter(Medical.marijuana.legalized == 'Yes') %>% select(Medical.marijuana.legalized)
num.legalized.medical <- nrow(legalized.medical)
#Number of states that have legalized rec marijuana
legalized.rec <- legalization.status %>% filter(Marijuana.legalized.for.recreational.use == 'Yes') %>% select(Marijuana.legalized.for.recreational.use)
num.legalized.rec <- nrow(legalized.rec)
#Number of states with no laws on marijuana
no.laws <- legalization.status %>% filter(No.laws.legalizing.marijuana == 'Yes') %>% select(No.laws.legalizing.marijuana)
num.no.laws <- nrow(no.laws)
View(legalized.rec)
View(legalization.status)
runApp()
legalized.medical <- legalization.status %>% filter(Medical.marijuana.legalized == 'Yes') %>% select(Medical.marijuana.legalized, State)
num.legalized.medical <- nrow(legalized.medical)
#Number of states that have legalized rec marijuana
legalized.rec <- legalization.status %>% filter(Marijuana.legalized.for.recreational.use == 'Yes') %>% select(Marijuana.legalized.for.recreational.use, State)
num.legalized.rec <- nrow(legalized.rec)
#Number of states with no laws on marijuana
no.laws <- legalization.status %>% filter(No.laws.legalizing.marijuana == 'Yes') %>% select(No.laws.legalizing.marijuana, State)
num.no.laws <- nrow(no.laws)
View(legalized.rec)
legalized.medical <- legalization.status %>% filter(Medical.marijuana.legalized == 'Yes') %>% select(Medical.marijuana.legalized, State)
legalized.medcal <- lapply(legalized.medical$State, as.character)
View(legalized.medical)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(legalized.medical)
runApp()
View(avg.month.data)
View(max(avg.month.data$percents))
View(min(avg.month.data$percents))
View(avg.dta)
View(avg.data)
runApp()
View(no.laws)
View(avg.year.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
