The opacity of the dots in the plot below is turned down so that we can see when the dots get more dense. The density created shows us when shootings occur more often. Based on this, we can see that during the summer months the most amount of shootings appear to occur. Additionally, January is the least active month for shootings by, seemingly, quite a bit. Another pattern we can see is that most people don't die from being shot and are instead just injured. On average, `r mean.injured` people were injured versus `r mean.killed` people were killed. This is an example of something we may not have thought to look at had it not been for a visual of the data. While perferably no shootings would happen, the fact that on average people survive being shot is a helpful statistic to know.
`r shootings.timeline`
---
title: "index.Rmd"
author: "Sean Meharry"
date: "5/9/2017"
output: html_document
---
```{r setup, include=FALSE}
library(knitr)
library(dplyr)
library(ggplot2)
library(plotly)
knitr::opts_chunk$set(echo = TRUE, include = FALSE, eval = TRUE)
shootings <- read.csv("data/shootings-2016.csv")
```
```{r paragraph}
# How many shootings occurred?
num.shootings <- nrow(shootings)
# How many lives were lost?
num.killed <- sum(shootings$killed)
# Which cities that were most affected (you can decide what "affected" means)?
# I said, which two had the most shootings?
affected.city <- as.data.frame(sort(table(shootings$city),decreasing=TRUE)[1:2])
# At least one other insight of your choice.
# What city had the most non-fatal shooting (a shooting where no one died)
non.fatal <- filter(shootings, killed == 0) %>%
filter(injured == max(injured))
```
# A Look at a Year of Shootings in America
In `r non.fatal$city`, `r non.fatal$state` `r non.fatal$injured` people were injured in a shooting, it was the biggest shooting in which no one died for 2016. Unfortunately, the rest of the US has experienced shootings that ended much worse. In just one year there were `r num.shootings` shootings and `r num.killed` people killed. The `r length(affected.city)` cities that had the most shootings were `r affected.city[1,1]` and `r affected.city[2,1]`.
``` {r table}
# Table for the 10 states with the most shootings
most.shootings <- group_by(shootings, state) %>%
filter(injured + killed == max(injured + killed)) %>%
mutate(total.injured = sum(injured), total.killed = sum(killed),
total.victims = sum(injured + killed)) %>%
arrange(desc(total.victims)) %>%
select(state, total.injured, total.killed, total.victims) %>%
unique() %>%
head(n = 10)
shooting.table <- kable(most.shootings, caption = 'States With the Most Shooting Victims' ,
col.names = c('State', 'Injured', 'Killed', 'Total Victims'))
# Median amount of shootings for a state
median.shootings <- most.shootings$total.victims[10]
```
The states below all had the most victims from shootings in the US. From this we can see that states generally have < `r median.shootings` per year. Additionally, it seems that even in states where shooting is the most prominent, more people are just injured rather than killed.
`r shooting.table`
``` {r incident}
# Incident with the second most people killed in it
second.most.killed <- arrange(shootings, desc(killed))[2,]
```
### The Second Worst Shooting of the Year
`r second.most.killed$city`, `r second.most.killed$state` faced a tremendous tradegy on `r second.most.killed$date`. `r second.most.killed$killed` people were killed and `r second.most.killed$injured` people were injured in the shooting. Due to this, `r second.most.killed$city` is now the site of the second biggest shooting for the year in terms of the death toll. To find out more about this horrible incident click [here]('http://www.thedailybeast.com/articles/2016/04/28/many-in-small-ohio-town-turn-on-murdered-family').
``` {r map}
# Layout setting for map
shootings$shot <- shootings$killed + shootings$injured
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white"))
# An interactive map with plots of each shooting
shootings.map <- plot_geo(shootings, locationmode = 'USA-states') %>%
add_markers(
x = ~lng, y = ~lat, size = ~shot, color = ~killed, hoverinfo = "text",
sizes = c(1, 500), colors = c('blue', 'red'),
text = ~paste0(date, '<br>', injured, " Injured & ", killed, " Killed", "<br>",
city, ', ', state)) %>%
layout(geo = geography)
```
# Mapping `r nrow(shootings)` Shootings
In the below map you can see every shooting, or at least every recorded shooting that I could find, in America. An interesting theme appears when you look at how many shootings there are in the south vs. the north. There appears to be more shootings in the south, but because there isn't a perfect 50/50 split of population between them, conclusions cannot be drawn about whether latitude matters. However, this doesn't mean we can't take another look at the data from a different perspective to look for patterns.
#### Size is proportional number of people shot
`r shootings.map`
``` {r chart}
# Transform shootings data to be represented chonologically based on month
shootings.chart <- shootings
month <- unlist(strsplit(as.character(shootings.chart$date), ' '))
shootings.chart$month <- month[seq(1, length(month), 6)]
shootings.chart <- transform(shootings.chart, month = factor(month, levels = c("January", "February", "March", "April",
"May", "June", "July", "August",
"September", "October", "November",
"December"), ordered = TRUE))
# An interactive jitter type plot
shootings.timeline <- ggplot(data = shootings.chart, aes(x = month, alpha = 0.5)) +
geom_jitter(mapping = aes(y = shootings$killed, colour = 'Killed')) +
geom_jitter(mapping = aes(y = shootings$injured, colour = 'Injured')) +
xlab("Month") + ylab("People Shot") +
ggtitle("Shootings Throughout the Year")
shootings.timeline <- ggplotly(shootings.timeline)
p <- plot_ly(shootings.chart, x = month, y = ~shot, color = ~injured, size = ~killed,
text = ~paste("Date: ", ~date, '<br>People Shot: ', ~shot, '<br>Killed: ',
~killed, '| Injured: ', ~injured),
type = 'scatter', mode = 'markers')
mean.injured <- round(mean(shootings$injured))
mean.killed <- round(mean(shootings$killed))
```
# Seeing Patterns in the Data
The opacity of the dots in the plot below is turned down so that we can see when the dots get more dense. The density created shows us when shootings occur more often. Based on this, we can see that during the summer months the most amount of shootings appear to occur. Additionally, January is the least active month for shootings by, seemingly, quite a bit. Another pattern we can see is that most people don't die from being shot and are instead just injured. On average, `r mean.injured` people were injured versus `r mean.killed` people were killed. This is an example of something we may not have thought to look at had it not been for a visual of the data. While perferably no shootings would happen, the fact that on average people survive being shot is a helpful statistic to know.
`r shootings.timeline`
---
title: "index.Rmd"
author: "Sean Meharry"
date: "5/9/2017"
output: html_document
---
```{r setup, include=FALSE}
library(knitr)
library(dplyr)
library(ggplot2)
library(plotly)
knitr::opts_chunk$set(echo = TRUE, include = FALSE, eval = TRUE)
shootings <- read.csv("data/shootings-2016.csv")
```
```{r paragraph}
# How many shootings occurred?
num.shootings <- nrow(shootings)
# How many lives were lost?
num.killed <- sum(shootings$killed)
# Which cities that were most affected (you can decide what "affected" means)?
# I said, which two had the most shootings?
affected.city <- as.data.frame(sort(table(shootings$city),decreasing=TRUE)[1:2])
# At least one other insight of your choice.
# What city had the most non-fatal shooting (a shooting where no one died)
non.fatal <- filter(shootings, killed == 0) %>%
filter(injured == max(injured))
```
# A Look at a Year of Shootings in America
In `r non.fatal$city`, `r non.fatal$state` `r non.fatal$injured` people were injured in a shooting, it was the biggest shooting in which no one died for 2016. Unfortunately, the rest of the US has experienced shootings that ended much worse. In just one year there were `r num.shootings` shootings and `r num.killed` people killed. The `r length(affected.city)` cities that had the most shootings were `r affected.city[1,1]` and `r affected.city[2,1]`.
``` {r table}
# Table for the 10 states with the most shootings
most.shootings <- group_by(shootings, state) %>%
filter(injured + killed == max(injured + killed)) %>%
mutate(total.injured = sum(injured), total.killed = sum(killed),
total.victims = sum(injured + killed)) %>%
arrange(desc(total.victims)) %>%
select(state, total.injured, total.killed, total.victims) %>%
unique() %>%
head(n = 10)
shooting.table <- kable(most.shootings, caption = 'States With the Most Shooting Victims' ,
col.names = c('State', 'Injured', 'Killed', 'Total Victims'))
# Median amount of shootings for a state
median.shootings <- most.shootings$total.victims[10]
```
The states below all had the most victims from shootings in the US. From this we can see that states generally have < `r median.shootings` per year. Additionally, it seems that even in states where shooting is the most prominent, more people are just injured rather than killed.
`r shooting.table`
``` {r incident}
# Incident with the second most people killed in it
second.most.killed <- arrange(shootings, desc(killed))[2,]
```
### The Second Worst Shooting of the Year
`r second.most.killed$city`, `r second.most.killed$state` faced a tremendous tradegy on `r second.most.killed$date`. `r second.most.killed$killed` people were killed and `r second.most.killed$injured` people were injured in the shooting. Due to this, `r second.most.killed$city` is now the site of the second biggest shooting for the year in terms of the death toll. To find out more about this horrible incident click [here]('http://www.thedailybeast.com/articles/2016/04/28/many-in-small-ohio-town-turn-on-murdered-family').
``` {r map}
# Layout setting for map
shootings$shot <- shootings$killed + shootings$injured
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white"))
# An interactive map with plots of each shooting
shootings.map <- plot_geo(shootings, locationmode = 'USA-states') %>%
add_markers(
x = ~lng, y = ~lat, size = ~shot, color = ~killed, hoverinfo = "text",
sizes = c(1, 500), colors = c('blue', 'red'),
text = ~paste0(date, '<br>', injured, " Injured & ", killed, " Killed", "<br>",
city, ', ', state)) %>%
layout(geo = geography)
```
# Mapping `r nrow(shootings)` Shootings
In the below map you can see every shooting, or at least every recorded shooting that I could find, in America. An interesting theme appears when you look at how many shootings there are in the south vs. the north. There appears to be more shootings in the south, but because there isn't a perfect 50/50 split of population between them, conclusions cannot be drawn about whether latitude matters. However, this doesn't mean we can't take another look at the data from a different perspective to look for patterns.
#### Size is proportional number of people shot
`r shootings.map`
``` {r chart}
# Transform shootings data to be represented chonologically based on month
shootings.chart <- shootings
month <- unlist(strsplit(as.character(shootings.chart$date), ' '))
shootings.chart$month <- month[seq(1, length(month), 6)]
shootings.chart <- transform(shootings.chart, month = factor(month, levels = c("January", "February", "March", "April",
"May", "June", "July", "August",
"September", "October", "November",
"December"), ordered = TRUE))
# An interactive jitter type plot
shootings.timeline <- ggplot(data = shootings.chart, aes(x = month, alpha = 0.5)) +
geom_jitter(mapping = aes(y = shootings$killed, colour = 'Killed')) +
geom_jitter(mapping = aes(y = shootings$injured, colour = 'Injured')) +
xlab("Month") + ylab("People Shot") +
ggtitle("Shootings Throughout the Year")
shootings.timeline <- ggplotly(shootings.timeline)
mean.injured <- round(mean(shootings$injured))
mean.killed <- round(mean(shootings$killed))
```
# Seeing Patterns in the Data
The opacity of the dots in the plot below is turned down so that we can see when the dots get more dense. The density created shows us when shootings occur more often. Based on this, we can see that during the summer months the most amount of shootings appear to occur. Additionally, January is the least active month for shootings by, seemingly, quite a bit. Another pattern we can see is that most people don't die from being shot and are instead just injured. On average, `r mean.injured` people were injured versus `r mean.killed` people were killed. This is an example of something we may not have thought to look at had it not been for a visual of the data. While perferably no shootings would happen, the fact that on average people survive being shot is a helpful statistic to know.
`r shootings.timeline`
library(knitr)
library(dplyr)
library(ggplot2)
library(plotly)
knitr::opts_chunk$set(echo = TRUE, include = FALSE, eval = TRUE)
shootings <- read.csv("data/shootings-2016.csv")
num.shootings <- nrow(shootings)
num.killed <- sum(shootings$killed)
affected.city <- as.data.frame(sort(table(shootings$city),decreasing=TRUE)[1:2])
non.fatal <- filter(shootings, killed == 0) %>%
filter(injured == max(injured))
most.shootings <- group_by(shootings, state) %>%
filter(injured + killed == max(injured + killed)) %>%
mutate(total.injured = sum(injured), total.killed = sum(killed),
total.victims = sum(injured + killed)) %>%
arrange(desc(total.victims)) %>%
select(state, total.injured, total.killed, total.victims) %>%
unique() %>%
head(n = 10)
shooting.table <- kable(most.shootings, caption = 'States With the Most Shooting Victims' ,
col.names = c('State', 'Injured', 'Killed', 'Total Victims'))
median.shootings <- most.shootings$total.victims[10]
second.most.killed <- arrange(shootings, desc(killed))[2,]
shootings$shot <- shootings$killed + shootings$injured
geography <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("black"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white"))
shootings.map <- plot_geo(shootings, locationmode = 'USA-states') %>%
add_markers(
x = ~lng, y = ~lat, size = ~shot, color = ~killed, hoverinfo = "text",
sizes = c(1, 500), colors = c('blue', 'red'),
text = ~paste0(date, '<br>', injured, " Injured & ", killed, " Killed", "<br>",
city, ', ', state)) %>%
layout(geo = geography)
shootings.chart <- shootings
month <- unlist(strsplit(as.character(shootings.chart$date), ' '))
shootings.chart$month <- month[seq(1, length(month), 6)]
shootings.chart <- transform(shootings.chart, month = factor(month, levels = c("January", "February", "March", "April",
"May", "June", "July", "August",
"September", "October", "November",
"December"), ordered = TRUE))
shootings.timeline <- ggplot(data = shootings.chart, aes(x = month, alpha = 0.5)) +
geom_jitter(mapping = aes(y = shootings$killed, colour = 'Killed')) +
geom_jitter(mapping = aes(y = shootings$injured, colour = 'Injured')) +
xlab("Month") + ylab("People Shot") +
ggtitle("Shootings Throughout the Year")
shootings.timeline <- ggplotly(shootings.timeline)
mean.killed <- round(mean(shootings$killed))
shootings.timeline
shootings <- read.csv("data/shootings-2016.csv")
shootings <- read.csv("data/shootings-2016.csv")
shootings <- read.csv("data/shootings-2016.csv")
shootings <- read.csv("data/shootings-2016.csv")
class(shootings.timeline)
shootings.timeline <- ggplot(data = shootings.chart, aes(x = month, alpha = 0.5)) +
geom_jitter(mapping = aes(y = ~killed, colour = 'Killed')) +
geom_jitter(mapping = aes(y = shootings$injured, colour = 'Injured')) +
xlab("Month") + ylab("People Shot") +
ggtitle("Shootings Throughout the Year")
shootings.timeline <- ggplotly(shootings.timeline)
shootings.timeline <- ggplot(data = shootings.chart, aes(x = month, alpha = 0.5)) +
geom_jitter(mapping = aes(y = shootings$killed, colour = 'Killed')) +
geom_jitter(mapping = aes(y = shootings$injured, colour = 'Injured')) +
xlab("Month") + ylab("People Shot") +
ggtitle("Shootings Throughout the Year")
shootings.timeline <- ggplotly(shootings.timeline)
shootings.timeline <- ggplotly(shootings.timeline, tooltip = c('x', 'y', 'colour'))
shootings.timeline
shootings.timeline <- ggplot(data = shootings.chart, aes(x = month, alpha = 0.5)) +
geom_jitter(mapping = aes(y = shootings$killed, colour = 'Killed')) +
geom_jitter(mapping = aes(y = shootings$injured, colour = 'Injured')) +
xlab("Month") + ylab("People Shot") +
ggtitle("Shootings Throughout the Year")
shootings.timeline <- ggplotly(shootings.timeline, tooltip = c('x', 'y', 'colour'))
shootings.timeline
shootings.chart$killed
style(shootings.timeline, hoverinfo = 'text', text = 'x')
style(shootings.timeline, hoverinfo = 'text', text = ~paste(date, '<br>', injured, " Injured & ", killed,
"Killed", "<br>", city, ', ', state))
style(shootings.timeline, hoverinfo = 'text', text = ~paste('Month = 'month, '<br>', shot, " people shot", "<br>"))
style(shootings.timeline, hoverinfo = 'text', text = ~paste('Month = ', month, '<br>', shot, " people shot", "<br>"))
style(shootings.timeline, hoverinfo = 'text', text = ~paste('Month = ', ~month, '<br>', ~shot, " people shot", "<br>"))
style(shootings.timeline, hoverinfo = 'text', text = ~paste('Month = ', ~month, '<br>', " people shot", "<br>"))
style(shootings.timeline, hoverinfo = 'text', text = ~paste('Month = ', shootings.chart$month, '<br>', shootings$shot, " people shot", "<br>"))
style(shootings.timeline, hoverinfo = 'text', text = ~paste('Month = ', shootings.chart$month, '<br>', shootings.chart$shot, " people shot", "<br>"))
style(shootings.timeline, hoverinfo = 'text', text = paste('Month = ', shootings.chart$month, '<br>', shootings.chart$shot, " people shot", "<br>"))
shootings.timeline <- style(shootings.timeline, hoverinfo = 'text', text = paste('Month: ', shootings.chart$month, '<br>', shootings.chart$shot, " people shot"))
shootings.timeline <- style(shootings.timeline, hoverinfo = 'text', text = paste('Month: ', x, '<br>', shootings.chart$shot, " people shot"))
shootings.timeline <- style(shootings.timeline, hoverinfo = 'text', text = paste('Month: ', ~x, '<br>', shootings.chart$shot, " people shot"))
install.packages('modelr')
install.packages('tidyverse')
install.packages('gapminder')
library(gapminder)
library(modelr)
library(tidyverse)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, include = FALSE)
survey <- read.csv('data/intro-survey.csv', stringsAsFactors = FALSE)
#setwd("~/Documents/INFO 201/a7-collaboration-fireemoji")
library(dplyr)
library(ggplot2)
source('./scripts/barchart.R')
barchart <- GetChart(dataset = survey, xaxis = survey[,13], xlabel = 'Cats or Dogs',
colorVar = survey[,1], title = 'Cat/Dog People by Class Standing')
barchart
survey <- read.csv('scripts/intro-survey.csv')
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, include = FALSE)
setwd("~/Documents/INFO 201/a7-collaboration-fireemoji")
survey <- read.csv('data/intro-survey.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
source('./scripts/barchart.R')
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, include = FALSE)
survey <- read.csv('data/intro-survey.csv', stringsAsFactors = FALSE) #read in data
library(dplyr)
library(ggplot2)
source('./scripts/infoFile.R')
source('./scripts/barchart.R')
source('./scripts/barchart.R')
source('./scripts/barchart.R')
source('./scripts/barchart.R')
source('./scripts/barchart.R')
source('./scripts/barchart.R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('/scripts/infoFile.R')
survey <- read.csv('data/intro-survey.csv', stringsAsFactors = FALSE) #read in data
library(dplyr)
library(ggplot2)
source('./scripts/infoFile.R')
source('./scripts/barchart.R')
source('./scripts/a7 scatter plot boi.R')
source('./scripts/a7 scatter plot boi .R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('./scripts/infoFile.R')
source('./scripts/barchart.R')
source('./scripts/a7 scatter plot boi .R')
source('./scripts/infoFile.R')
summary <- informationFunction(survey)
source('./scripts/barchart.R')
source('./scripts/a7 scatter plot boi .R')
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, include = FALSE)
survey <- read.csv('data/intro-survey.csv', stringsAsFactors = FALSE) #read in data
library(dplyr)
library(ggplot2)
source('./scripts/infoFile.R')
summary <- informationFunction(survey)
source('./scripts/barchart.R')
source('./scripts/a7 scatter plot boi .R')
source('./scripts/infoFile.R')
summary <- informationFunction(survey)
source('./scripts/barchart.R')
source('./scripts/a7 scatter plot boi .R')
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, include = FALSE)
setwd("C:/Users/Julia/Desktop/Info201/a7-collaboration-fireemoji")
source('./scripts/infoFile.R')
summary <- informationFunction(survey)
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, include = FALSE)
survey <- read.csv('data/intro-survey.csv', stringsAsFactors = FALSE) #read in data
library(dplyr)
library(ggplot2)
summary <- informationFunction(survey)
source('./scripts/infoFile.R')
summary <- informationFunction(survey)
View(survey)
View(survey)
shiny::runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
plot <- plot_ly(
x = c("Past Month", "Past Year", "Percieved Risk Average"),
y = c(month.avg, year.avg, risk.avg),
type = "bar",
error_y = ~list(value = c(month.confidence, year.confidence, risk.confidence),
color = '#000000'),
marker = list(color = c('rgb(58,95,11)', 'rgb(161,152,90)', 'rgb(169,169,169)'), width = 1.5,
line = list(color = 'rgb(169,169,169)'))) %>%
layout(title = "Marijuana Usage & Risk",
xaxis = list(title = "Marijuana Usage"),
yaxis = list(title = "Percent"))
runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
plot <- plot_ly(
x = c("Past Month", "Past Year", "Percieved Risk Average"),
y = c(month.avg, year.avg, risk.avg),
type = "bar",
error_y = ~list(value = c(month.confidence, year.confidence, risk.confidence),
color = '#000000'),
marker = list(color = c('rgb(58,95,11)', 'rgb(58,95,11)', 'rgb(169,169,169)'), width = 1.5,
line = list(color = 'rgb(169,169,169)'))) %>%
layout(title = "Marijuana Usage & Risk",
xaxis = list(title = "Marijuana Usage"),
yaxis = list(title = "Percent"))
runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
runApp('Documents/INFO 201/info-201-final-project')
avg.data
new.avg.month.data
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
updated.year.data <- mutate(data.set.year, percents = extract_numeric(Small..Area.Estimate))
avg.month.data <- ddply(updated.month.data, .(State), summarize, percents = mean(percents))
data.set.month <- read.csv("./data/Marijuana_Use_Past_Month.csv")
data.set.year <-  read.csv("./data/Marijuana_Use_Past_Year.csv")
states.data <- read.csv("./data/States.csv")
legalization.status <- read.csv("./Data/state_marijuana_laws_10_2016.csv")
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
updated.year.data <- mutate(data.set.year, percents = extract_numeric(Small..Area.Estimate))
marijuana.laws <- read.csv('./data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
source('./Scripts/Timeline.R')
source('./Scripts/MapGraph.R')
source('./Scripts/Bar Graph.R')
setwd("~/Documents/INFO 201/info-201-final-project")
marijuana.laws <- read.csv('./data/legal_marijuana_support.csv', stringsAsFactors = FALSE)
source('./Scripts/Timeline.R')
source('./Scripts/MapGraph.R')
source('./Scripts/Bar Graph.R')
data.set.month <- read.csv("./data/Marijuana_Use_Past_Month.csv")
data.set.year <-  read.csv("./data/Marijuana_Use_Past_Year.csv")
states.data <- read.csv("./data/States.csv")
legalization.status <- read.csv("./Data/state_marijuana_laws_10_2016.csv")
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
updated.year.data <- mutate(data.set.year, percents = extract_numeric(Small..Area.Estimate))
avg.month.data <- ddply(updated.month.data, .(State), summarize, percents = mean(percents))
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
new.avg.month.data
View(new.avg.month.data)
new.avg.month.data$percents <- paste0(new.avg.month.data, '%')
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
new.avg.month.data$percents <- paste0(new.avg.month.data$percents, '%')
new.avg.month.data$percents <- paste0(round(new.avg.month.data$percents, digits = 2), '%')
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
new.avg.month.data$percents <- paste0(round(new.avg.month.data$percents, digits = 2), '%')
new.avg.year.data$percents <- paste0(round(new.avg.year.data$percents, digits = 2), '%')
avg.year.data <- ddply(updated.year.data, .(State), summarize, percents = mean(percents))
new.avg.year.data <- merge(avg.year.data, states.data, by = "State")
new.avg.year.data$percents <- paste0(round(new.avg.year.data$percents, digits = 2), '%')
runApp()
runApp()
runApp()
runApp()
runApp()
avg.month.data <- ddply(updated.month.data, .(State), summarize, percents = mean(percents))
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
new.avg.month.data$stuff <- paste0(round(new.avg.month.data$percents, digits = 2), '%')
avg.year.data <- ddply(updated.year.data, .(State), summarize, percents = mean(percents))
new.avg.year.data <- merge(avg.year.data, states.data, by = "State")
runApp()
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
data.set.month <- read.csv("./data/Marijuana_Use_Past_Month.csv")
data.set.year <-  read.csv("./data/Marijuana_Use_Past_Year.csv")
states.data <- read.csv("./data/States.csv")
legalization.status <- read.csv("./Data/state_marijuana_laws_10_2016.csv")
updated.month.data <- mutate(data.set.month, percents = extract_numeric(Small..Area.Estimate))
updated.year.data <- mutate(data.set.year, percents = extract_numeric(Small..Area.Estimate))
avg.month.data <- ddply(updated.month.data, .(State), summarize, percents = mean(percents))
new.avg.month.data <- merge(avg.month.data, states.data, by = "State")
new.avg.month.data$stuff <- paste0(round(new.avg.month.data$percents, digits = 2), '%')
avg.year.data <- ddply(updated.year.data, .(State), summarize, percents = mean(percents))
new.avg.year.data <- merge(avg.year.data, states.data, by = "State")
new.avg.year.data$stuff <- paste0(round(new.avg.year.data$percents, digits = 2), '%')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(new.avg.month.data)
View(new.avg.month.data$percents)
class(new.avg.month.data$percents)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(new.avg.month.data)
new.avg.month.data$percents <- round(new.avg.month.data$percents, digits = 2)
new.avg.month.data$hover <- paste0(new.avg.month.data$percents, '%')
avg.year.data <- ddply(updated.year.data, .(State), summarize, percents = mean(percents))
new.avg.year.data <- merge(avg.year.data, states.data, by = "State")
new.avg.year.data$percents <- round(new.avg.year.data$percents, digits = 2)
new.avg.year.data$hover <- paste0(new.avg.year.data$percents, '%')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
